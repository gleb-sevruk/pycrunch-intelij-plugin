<idea-plugin>
    <id>com.pycrunch.intellijconnector</id>
    <name>PyCrunch - Live Testing</name>
    <vendor email="support@pycrunch.com" url="https://pycrunch.com">PyCrunch</vendor>

    <description><![CDATA[
    PyCrunch is an continuous test runner for Python.
    <ul>
    <li>Automatically runs impacted tests on code change</li>
    <li>Shows coverage inline with your code</li>
    <li>See which lines are hit by each tests</li>
    <li>Instant feedback about failing tests and affected lines</li>
    <li>Captures output for each test separately, allowing better diagnostics per test</li>
    <li>Easy navigation between code and tests</li>
    <li>Support for Django</li>
</ul>
<br>
<br>
Say hello to the real TDD - no longer need to run your tests manually. Let the engine do this for you.
<br>
<br>

<b>Live testing</b> - run tests as you type:
<br>
<img src="https://pycrunch-dist.s3.eu-central-1.amazonaws.com/assets/pycrunch_demo.gif" width="650" height="303">
<br>
<br>

Exact <b>location</b> of test failure:
<br>
<img src="https://pycrunch-dist.s3.eu-central-1.amazonaws.com/assets/failing_test_path.png" width="650" height="276">
<br>
<br>
Detailed coverage per <b>each test</b>:
<br>
<img src="https://pycrunch-dist.s3.eu-central-1.amazonaws.com/assets/who_tests_what.png" width="650" height="293">
<br>
<br>
<b>Output interception:</b>
<br>
<img src="https://pycrunch-dist.s3.eu-central-1.amazonaws.com/assets/python_test_output_interception.png" width="650" height="293">
<br>
<br>

In order for plugin to work properly:
<br>
<code>pip install pycrunch-engine</code>
<br>
After pip package is installed in your virtual env, you can start engine from PyCharm top menu:
<br>
PyCrunch->Run/Restart PyCrunch Engine


<br>
<br>
This test runner is greatly inspired by NCrunch, and applied to Python.
<br>
<br>

Check documentation before you start.
<br>
<br>
<br>
GitHub page:
<br>
<a href="https://github.com/gleb-sevruk/pycrunch-engine">https://github.com/gleb-sevruk/pycrunch-engine</a>
<br>
<br>
Official Site:
<br>
<a href="https://pycrunch.com">https://pycrunch.com</a>


    ]]></description>
    <idea-version since-build="171"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
<!--    &lt;!&ndash; uncomment to enable plugin in all products-->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.python</depends>
<!--    &ndash;&gt;-->
    <project-components>
        <component>
            <!-- Interface and implementation classes are the same -->
            <implementation-class>com.gleb.pycrunch.MyProjComponent</implementation-class>

            <!-- If the "workspace" option is set "true", the component
                 saves its state to the .iws file instead of the .ipr file.
                 Note that the <option> element is used only if the component
                 implements the JDOMExternalizable interface. Otherwise, the
                 use of the <option> element takes no effect.  -->
            <option name="workspace" value="true" />

            <!-- If the "loadForDefaultProject" tag is present, the project component is instantiated also for the default project. -->
            <loadForDefaultProject/>
        </component>
    </project-components>
    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.gleb.pycrunch.activation.MyStateService"/>
        <applicationService serviceInterface="com.gleb.pycrunch.MyCounter"
                            serviceImplementation="com.gleb.pycrunch.MyCounter"/>

        <projectService serviceInterface="com.gleb.pycrunch.PycrunchHighlighterMarkersState"
                            serviceImplementation="com.gleb.pycrunch.PycrunchHighlighterMarkersState"/>

        <projectService serviceInterface="com.gleb.pycrunch.PycrunchConnector"
                        serviceImplementation="com.gleb.pycrunch.PycrunchConnector"/>

        <projectService serviceImplementation="com.gleb.pycrunch.shared.PycrunchWindowStateService"/>


        <toolWindow id="PyCrunch" icon="/logo.svg" anchor="right" factoryClass="com.gleb.pycrunch.PyCrunchToolWindowFactory"/>


    </extensions>

    <actions>
        <group id="PyChrunch.DevMenu" text="_PyCrunch" description="PyCrunch">
            <add-to-group group-id="MainMenu" anchor="last"  />
            <action id="PyChrunch.RunEngine" class="com.gleb.pycrunch.actions.RunPycrunchEngineAction" text="Run Engine" description="Create and run Pycrunch engine within current project" />
            <separator/>
            <action id="PyChrunch.ConnectToCustomPycrunchEngineAction" class="com.gleb.pycrunch.actions.ConnectToCustomPycrunchEngineAction" text="Attach to PyCrunch-Engine" description="A test menu item" />
<!--            <action id="PyCrunch.RemoveLicence" class="com.gleb.pycrunch.actions.PycrunchRemoveLicenseAction" text="Remove _License" description="Removes previously bound license" />-->
            <separator/>
            <action id="PyCrunch.DocumentationAction" class="com.gleb.pycrunch.actions.PycrunchOpenDocumentationAction" text="Documentation" description="Open documentation link" />
            <action id="PyCrunch.FreeInfo" class="com.gleb.pycrunch.actions.PycrunchFreePeriodInfoAction" text="Free Edition" description="Free edition information" />
        </group>
    </actions>
</idea-plugin>